{
	// Place your snippets for ruby here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"Service class definition with initialize": {
		"prefix": "service class",
		"body": [
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}",
			"\tattr_reader :${2:attribute}",
			"",
			"\tdef initialize($2:)",
			"\t\t@$2 = $2",
			"\tend",
			"",
			"\tdef call",
			"\t\t$0",
			"\tend",
			"end",
			""
		]
	},
	"Query class definition with initialize": {
		"prefix": "query class",
		"body": [
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}",
			"\tattr_reader :${2:attribute}",
			"",
			"\tdef initialize($2:)",
			"\t\t@$2 = $2",
			"\tend",
			"",
			"\tdef call",
			"\t\t$0",
			"\tend",
			"end",
			""
		]
	},
	"Class definition with initialize": {
		"prefix": "clas",
		"body": [
			"class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}",
			"\tattr_reader :${2:attribute}",
			"",
			"\tdef initialize($2)",
			"\t\t@$2 = $2",
			"\tend",
			"\t$0",
			"end",
			""
		]
	},
	"Mutation methods authorized? and resolve": {
		"prefix": "muta",
		"body": [
			"def authorized?($1)",
			"\t$0",
			"end",
			"",
			"def resolve(**args)",
			"end",
			""
		]
	}
}
